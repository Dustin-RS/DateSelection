[{"C:\\Users\\omirz\\Desktop\\1C_task\\typescript-app\\src\\index.tsx":"1","C:\\Users\\omirz\\Desktop\\1C_task\\typescript-app\\src\\reportWebVitals.ts":"2","C:\\Users\\omirz\\Desktop\\1C_task\\typescript-app\\src\\App.tsx":"3","C:\\Users\\omirz\\Desktop\\1C_task\\DateSelection\\typescript-app\\src\\index.tsx":"4","C:\\Users\\omirz\\Desktop\\1C_task\\DateSelection\\typescript-app\\src\\reportWebVitals.ts":"5","C:\\Users\\omirz\\Desktop\\1C_task\\DateSelection\\typescript-app\\src\\App.tsx":"6"},{"size":554,"mtime":1694079347968,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1694079347655,"results":"9","hashOfConfig":"8"},{"size":3697,"mtime":1694079581690,"results":"10","hashOfConfig":"8"},{"size":573,"mtime":1694108770514,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1694108770514,"results":"13","hashOfConfig":"12"},{"size":4293,"mtime":1694119740422,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2g203e",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bnvl39",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\omirz\\Desktop\\1C_task\\typescript-app\\src\\index.tsx",[],[],"C:\\Users\\omirz\\Desktop\\1C_task\\typescript-app\\src\\reportWebVitals.ts",[],[],"C:\\Users\\omirz\\Desktop\\1C_task\\typescript-app\\src\\App.tsx",["34","35","36","37","38"],[],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport moment from 'moment';\n\nconst months: string[] = [\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n  \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst App: React.FC = () => {\n  const daysOfWeek: string[] = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  const [year, setYear] = useState<number>(selectedDate.getFullYear());\n  const [month, setMonth] = useState<number>(selectedDate.getMonth());\n  const [inputDate, setInputDate] = useState<string>(selectedDate.toLocaleDateString());\n  const [calendarHTML, setCalendarHTML] = useState<string>('');\n  const selectedMonth: number = month;\n  const selectedYear: number = year;\n  const [isActive, setActive] = useState<boolean>(false);\n  const daysInMonth: number = new Date(selectedYear, selectedMonth + 1, 0).getDate();\n  const firstDayOfMonth: number = new Date(selectedYear, selectedMonth, 1).getDay();\n\n  const handleDateClick = (day: number) => {\n    const newSelectedDate: Date = new Date(year, month, day);\n    setSelectedDate(newSelectedDate);\n    setInputDate(newSelectedDate.toLocaleDateString());\n  };\n\n  const handleMonthChange = (increment: number) => {\n    const newMonth: number = month + increment;\n    if (newMonth < 0) {\n      setMonth(11);\n      setYear(year - 1);\n    } else if (newMonth > 11) {\n      setMonth(0);\n      setYear(year + 1);\n    } else {\n      setMonth(newMonth);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputDate(e.target.value);\n  };\n\n  const handleInputBlur = () => {\n    const newDate: Date = new Date(inputDate);\n    const date = moment(inputDate, 'MM/DD/YYYY', true); // Validate as MM/DD/YYYY\n    if (date.isValid()) {\n      setYear(newDate.getFullYear());\n      setMonth(newDate.getMonth());\n      setSelectedDate(newDate);\n    } else {\n      setInputDate('Invalid Date');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <button onClick={() => handleMonthChange(-1)}>&#8249;</button>\n        <select value={month} onChange={(e) => setMonth(parseInt(e.target.value))}>\n          {months.map((monthName, index) => (\n            <option key={index} value={index}>{monthName}</option>\n          ))}\n        </select>\n        <select value={year} onChange={(e) => setYear(parseInt(e.target.value))}>\n          {Array.from({ length: 10 }, (_, i) => (\n            <option key={i} value={year - 5 + i}>{year - 5 + i}</option>\n          ))}\n        </select>\n        <button onClick={() => handleMonthChange(1)}>&#8250;</button>\n      </div>\n      <table>\n        <thead>\n          <tr>{daysOfWeek.map((day) => <th key={day}>{day}</th>)}</tr>\n        </thead>\n        <tbody>\n          {Array.from({ length: 6 }, (_, i) => (\n            <tr key={i}>\n              {Array.from({ length: 7 }, (_, j) => {\n                const day: number = i * 7 + j + 1 - firstDayOfMonth;\n                return (\n                  <td key={day}>\n                    {day > 0 && day <= daysInMonth && (\n                      <button\n                        className='date-cell'\n                        onClick={() => handleDateClick(day)}\n                      >\n                        {day}\n                      </button>\n                    )}\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <input\n        type=\"text\"\n        value={inputDate}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\omirz\\Desktop\\1C_task\\DateSelection\\typescript-app\\src\\index.tsx",[],[],"C:\\Users\\omirz\\Desktop\\1C_task\\DateSelection\\typescript-app\\src\\reportWebVitals.ts",[],[],"C:\\Users\\omirz\\Desktop\\1C_task\\DateSelection\\typescript-app\\src\\App.tsx",["39","40","41","42","43","44"],[],{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"49","line":16,"column":10,"nodeType":"47","messageId":"48","endLine":16,"endColumn":22},{"ruleId":"45","severity":1,"message":"50","line":16,"column":24,"nodeType":"47","messageId":"48","endLine":16,"endColumn":39},{"ruleId":"45","severity":1,"message":"51","line":19,"column":10,"nodeType":"47","messageId":"48","endLine":19,"endColumn":18},{"ruleId":"45","severity":1,"message":"52","line":19,"column":20,"nodeType":"47","messageId":"48","endLine":19,"endColumn":29},{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"53","line":15,"column":10,"nodeType":"47","messageId":"48","endLine":15,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":17,"column":10,"nodeType":"47","messageId":"48","endLine":17,"endColumn":22},{"ruleId":"45","severity":1,"message":"50","line":17,"column":24,"nodeType":"47","messageId":"48","endLine":17,"endColumn":39},{"ruleId":"45","severity":1,"message":"51","line":18,"column":10,"nodeType":"47","messageId":"48","endLine":18,"endColumn":18},{"ruleId":"45","severity":1,"message":"52","line":18,"column":20,"nodeType":"47","messageId":"48","endLine":18,"endColumn":29},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'calendarHTML' is assigned a value but never used.","'setCalendarHTML' is assigned a value but never used.","'isActive' is assigned a value but never used.","'setActive' is assigned a value but never used.","'monthDay' is assigned a value but never used."]